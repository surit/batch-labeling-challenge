✅ Overview

This pipeline automates batch image labeling using a PyTorch model with Albumentations augmentations, producing COCO-format outputs for your labeling workflows.

The pipeline is modular, cloud-deployable, scalable, and aligned with production-grade batch processing pipelines.
🚩 Pipeline Objectives

    Deploy infrastructure for model inference.

    Process raw images using augmentations (transforms.json).

    Run inference on processed images and save COCO-format JSON.

    Tear down infrastructure after completion.

    Submit clean, well-tested, and well-documented code.

📦 Pipeline Components
1️⃣ Infrastructure

    AWS EC2 (Ubuntu 22.04) for scalable, repeatable compute.

    Clean teardown post-processing to manage costs.

2️⃣ Data Preprocessing

    Uses Albumentations with transforms.json for flexible image augmentations.

    Saves transformed images and logs transformation metadata in COCO JSON (transformed_coco.json).

3️⃣ Inference

    PyTorch model (model.pt) loads and infers over images.

    Applies necessary transformations:

        Resizing

        Tensor conversion

        Normalization

    Predicts class labels and confidence.

4️⃣ Output

    Generates final_predictions.json in COCO format, including:

        Image metadata

        Annotation metadata

        Category mapping

    Ready for downstream labeling pipelines or evaluation.

5️⃣ Testing

    Includes unit tests (tests/test_coco_output.py) to ensure COCO JSON validity.

    Demonstrates testing discipline in real-world ML pipelines.

🚀 How to Run the Pipeline
🖥️ Environment Setup

    Launch EC2 (Ubuntu 22.04, t3.medium recommended).

    SSH:

ssh -i your_key.pem ubuntu@your_public_ip

Install dependencies:

    sudo apt update
    sudo apt install python3-pip python3-venv unzip -y
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt

🖼️ Preprocess Images

Run:

python transform.py

This:
✅ Loads transforms.json.
✅ Processes output.jpg (or all images if extended).
✅ Saves:

    Transformed images (transformed_output.jpg)

    transformed_coco.json with augmentation metadata.

🤖 Run Inference

    Upload test images into images/ folder:

scp -i your_key.pem image1.jpg ubuntu@your_public_ip:~/batch_labeling_challenge/images/

Run:

    python run_batch_inference.py

✅ Generates final_predictions.json in COCO format.
📥 Retrieve Results

Download:

scp -i your_key.pem ubuntu@your_public_ip:~/batch_labeling_challenge/final_predictions.json ./

🧪 Testing

Run:

python tests/test_coco_output.py

to validate your COCO JSON structure.
